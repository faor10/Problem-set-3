## Llamar pacman (contiene la función p_load)
rm(list=ls())
require(pacman)
## Llama/instala-llama las librerías listadas
p_load(tidyverse,rio,
sf, # Leer/escribir/manipular datos espaciales
leaflet, # Visualizaciones dinámicas
tmaptools, # geocode_OSM()
osmdata,
spdep,
secr,
here) # Get OSM's data
path = here('')
train<-readRDS(here(path,"/train.Rds"))
test<-readRDS(here(path,"/test.Rds"))
train<-readRDS(here(path,"train.Rds"))
path
train<-readRDS(here(path,"/stores/train.Rds"))
train<-readRDS(here(path,"stores/train.Rds"))
train<-readRDS(here(path,"stores/train.Rds"))
test<-readRDS(here(path,"stores/test.Rds"))
cha.poly<-st_read(here(path,"localidades.shp"))
cha.poly<-st_read(here(path,"stores/localidades.shp"))
med.poly<-st_read(here(path,"stores/LimiteComunaCorregimiento_2014.shp"))
load("D:/OneDrive - Universidad de los Andes/Intersemestral 2/Big Data/Taller3/GitHub/Problem-set-3/stores/datos.RData")
View(train_final)
leaflet() %>% addTiles()  %>%
addCircleMarkers(data=train_chap, col="blue")%>%
addPolygons(data=cha.poly[13,])
leaflet() %>% addTiles()  %>%
addCircleMarkers(data=train_med, col="blue")%>%
addPolygons(data=med.poly[14,])
leaflet() %>% addTiles()  %>%
addCircleMarkers(data=train_med, col="blue")%>%
addPolygons(data=pol_poblad)
View(train_final)
